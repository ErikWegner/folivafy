//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "event")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub timestamp: Option<DateTime>,
    pub document_id: Uuid,
    pub user: Uuid,
    pub category_id: i32,
    #[sea_orm(column_type = "JsonBinary")]
    pub payload: Json,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::collection_document::Entity",
        from = "Column::DocumentId",
        to = "super::collection_document::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    CollectionDocument,
}

impl Related<super::collection_document::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CollectionDocument.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
