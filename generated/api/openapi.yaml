openapi: 3.0.3
info:
  description: Collection handling for validated forms
  license:
    name: AGPL-3.0 license
    url: https://github.com/ErikWegner/folivafy/blob/main/LICENSE
  title: Folivafy
  version: 1.0.0
servers:
- url: http://localhost:3000/api
tags:
- description: Administrative tasks
  name: administration
- description: Collection handling
  name: collection
paths:
  /collections:
    get:
      description: List all available collections on this server
      operationId: getCollections
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsList'
          description: Successful operation
      summary: List available collections
      tags:
      - administration
    post:
      description: Create a new collection on this server
      operationId: createCollection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createCollection_request'
        description: Information about the new collection
        required: true
      responses:
        "201":
          content:
            text/plain:
              schema:
                example: 201 Created
                type: string
          description: successful operation
        "400":
          description: Creating the collection failed
      summary: Create a collection
      tags:
      - administration
  /collections/{collection}:
    get:
      description: Get a list of items within the collection
      operationId: listCollection
      parameters:
      - description: Path name of the collection
        explode: false
        in: path
        name: collection
        required: true
        schema:
          $ref: '#/components/schemas/CollectionName'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionItemsList'
          description: successful operation
        "404":
          description: Collection not found
      summary: List collection items
      tags:
      - collection
    post:
      description: Create a new item in this collection
      operationId: storeIntoCollection
      parameters:
      - description: Path name of the collection
        explode: false
        in: path
        name: collection
        required: true
        schema:
          $ref: '#/components/schemas/CollectionName'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionItem'
        description: Item payload
        required: true
      responses:
        "201":
          content:
            text/plain:
              schema:
                example: 201 Created
                type: string
          description: successful operation
        "400":
          description: Creating the collection failed
      summary: Create new item
      tags:
      - collection
  /collections/{collection}/{documentId}:
    get:
      description: Get item data
      operationId: getItemById
      parameters:
      - description: Path name of the collection
        explode: false
        in: path
        name: collection
        required: true
        schema:
          $ref: '#/components/schemas/CollectionName'
        style: simple
      - description: Document id as path component
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          $ref: '#/components/schemas/DocumentId'
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionItem'
          description: successful operation
        "404":
          description: Item not found
      summary: Get item
      tags:
      - collection
    put:
      description: Replace the item data
      operationId: updateItemById
      parameters:
      - description: Path name of the collection
        explode: false
        in: path
        name: collection
        required: true
        schema:
          $ref: '#/components/schemas/CollectionName'
        style: simple
      - description: Document id as path component
        explode: false
        in: path
        name: documentId
        required: true
        schema:
          $ref: '#/components/schemas/DocumentId'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionItem'
        description: Item payload
        required: true
      responses:
        "201":
          content:
            text/plain:
              schema:
                example: 201 Created
                type: string
          description: successful operation
        "400":
          description: Updating failed
      summary: Replace item
      tags:
      - collection
components:
  parameters:
    CollectionNameParam:
      description: Path name of the collection
      explode: false
      in: path
      name: collection
      required: true
      schema:
        $ref: '#/components/schemas/CollectionName'
      style: simple
    DocumentIdParam:
      description: Document id as path component
      explode: false
      in: path
      name: documentId
      required: true
      schema:
        $ref: '#/components/schemas/DocumentId'
      style: simple
  schemas:
    DocumentId:
      description: Document identifier
      example: 503a11c7-0a2a-48c3-bf0a-e5296c3f26db
      format: uuid
      type: string
    DocumentFields:
      description: Field data
      type: object
    CollectionName:
      description: Path name of the collection
      example: shapes
      maxLength: 32
      minLength: 1
      pattern: "^[a-z][-a-z0-9]*$"
      type: string
    CollectionsList:
      example:
        total: 1
        offset: 0
        limit: 20
        items:
        - locked: true
          name: shapes
          oao: false
          title: Shapes
        - locked: false
          name: letters
          oao: true
          title: Letters
      properties:
        limit:
          default: 50
          maximum: 250
          minimum: 1
          type: integer
        offset:
          default: 0
          minimum: 0
          type: integer
        total:
          default: 0
          minimum: 0
          type: integer
        items:
          items:
            $ref: '#/components/schemas/Collection'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    Collection:
      example:
        locked: false
        name: shapes
        oao: true
        title: Shapes
      properties:
        name:
          description: Path name of the collection
          example: shapes
          maxLength: 32
          minLength: 1
          pattern: "^[a-z][-a-z0-9]*$"
          type: string
        title:
          description: Human readable name of the collection
          example: Shapes
          maxLength: 150
          minLength: 1
          type: string
        oao:
          description: |
            Owner access only. Indicates if documents within the collection
            are _owner access only_ (value `true`) or all documents in the
            collection can be read by all users (`false`).
          type: boolean
        locked:
          description: |
            Indicates if new documents within the collection can be created
            (value `false`) or the collection is set to read only (`true`).
          type: boolean
      required:
      - locked
      - name
      - oao
      - title
      type: object
    CollectionItemsList:
      example:
        total: 1
        offset: 0
        limit: 20
        items:
        - id: false9f818bff-a1b4-487a-9706-29a5ac1cf898
          f:
            title: Rectangle
            price: 14
        - id: e109a39d-fb8b-4d15-9794-9f3b2eca9132
          f:
            title: Circle
            price: 19
      properties:
        limit:
          default: 50
          maximum: 250
          minimum: 1
          type: integer
        offset:
          default: 0
          minimum: 0
          type: integer
        total:
          default: 0
          minimum: 0
          type: integer
        items:
          items:
            $ref: '#/components/schemas/CollectionItem'
          type: array
      required:
      - items
      - limit
      - offset
      - total
      type: object
    CollectionItem:
      example:
        id: false9f818bff-a1b4-487a-9706-29a5ac1cf898
        f:
          title: Rectangle
          price: 14
      properties:
        id:
          description: Document identifier
          example: 503a11c7-0a2a-48c3-bf0a-e5296c3f26db
          format: uuid
          type: string
        f:
          description: Field data
          type: object
      required:
      - f
      - id
      type: object
    createCollection_request:
      example:
        name: shapes
        title: Shapes
        oao: false
      properties:
        name:
          description: Path name of the collection
          example: shapes
          maxLength: 32
          minLength: 1
          pattern: "^[a-z][-a-z0-9]*$"
          type: string
        title:
          description: Human readable name of the collection
          example: Shapes
          maxLength: 150
          minLength: 1
          type: string
        oao:
          description: Owner access only?
          type: boolean
      required:
      - name
      - oao
      - title
      type: object

